name: hands-on-lambda-ecr-apps
run-name: ${{ github.event_name }} on ${{ github.ref_name }} by @${{ github.actor }} inputs ${{ github.event.inputs.environment }} ${{ github.event.inputs.action }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

env:
  AWS_REGION: "ap-northeast-1"
  TF_VERSION: "1.11.4"
  TF_WORKING_DIR: "./services/hands-on-lambda-ecr"

permissions:
  id-token: write
  contents: read

jobs:
  plan_apply_apps:
    name: "Plan/Apply Apps"
    runs-on: ubuntu-24.04-arm
    environment: ${{ github.event.inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        # NOTE: if you want to add more apps, add them here
        app_name:
          - requester

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.HANDS_ON_LAMBDA_ECR_TERRAFORM_IAM }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: ecr-login

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Plan for Lambda
        id: tf_plan
        env:
          TF_BACKEND_S3_BUCKET: ${{ secrets.TF_BACKEND_S3_BUCKET }}
        run: |
          make lambda-plan \
            APP_NAME=${{ matrix.app_name }} \
            ENV=${{ github.event.inputs.environment }} \
            ECR_REGISTRY=${{ steps.ecr-login.outputs.registry }} \
            LAMBDA_VAR_FILE_ARGS= \
            LAMBDA_ARGS='-var=github_repository=${{ github.repository }} -var=aws_region=${{ env.AWS_REGION }}'
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply for Lambda
        if: github.event.inputs.action == 'apply'
        env:
          TF_BACKEND_S3_BUCKET: ${{ secrets.TF_BACKEND_S3_BUCKET }}
        run: |
          make lambda-apply-gha \
            APP_NAME=${{ matrix.app_name }} \
            ENV=${{ github.event.inputs.environment }} \
            ECR_REGISTRY=${{ steps.ecr-login.outputs.registry }}
        working-directory: ${{ env.TF_WORKING_DIR }}
