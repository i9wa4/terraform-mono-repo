name: hands-on-lambda-ecr-push-image
run-name: ${{ github.event_name }} on ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: true
        default: 'dev'
        type: string

env:
  AWS_REGION: "ap-northeast-1"
  ECR_REPOSITORY_BASE_NAME: "hands-on-lambda-ecr" # Base name, env suffix will be added

permissions:
  id-token: write # For aws-actions/configure-aws-credentials
  contents: read   # For actions/checkout

jobs:
  build_and_push_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # This job assumes the ECR repository already exists.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.HANDS_ON_LAMBDA_ECR_ARN_IAM_OIDC }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          FULL_ECR_REPOSITORY_NAME: ${{ env.ECR_REPOSITORY_BASE_NAME }}-${{ github.event.inputs.environment }}
          # Pass environment to make, can be used in Makefile if needed
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        working-directory: ./services/hands-on-lambda-ecr/${{ github.event.inputs.environment }}/app
        run: |
          make build-push \
            ECR_REGISTRY="$ECR_REGISTRY" \
            FULL_ECR_REPOSITORY_NAME="$FULL_ECR_REPOSITORY_NAME" \
            IMAGE_TAG="$IMAGE_TAG" \
            AWS_REGION="${{ env.AWS_REGION }}" \
            ENVIRONMENT="$ENVIRONMENT"
