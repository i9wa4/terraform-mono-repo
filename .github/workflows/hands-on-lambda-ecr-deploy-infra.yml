name: hands-on-lambda-ecr-deploy-infra
run-name: ${{ github.event_name }} on ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
  pull_request:
    paths:
      - "services/hands-on-lambda-ecr/terraform/**"
      - "services/hands-on-lambda-ecr/environments/**"

env:
  AWS_REGION: "ap-northeast-1"
  TF_VERSION: "1.11.4"
  TF_WORKING_DIR: "./services/hands-on-lambda-ecr"
  TF_BACKEND_S3_BUCKET: ${{ secrets.TF_BACKEND_S3_BUCKET_NAME }}
  ENV: ${{ github.event.inputs.environment || 'dev' }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy-common-infrastructure:
    name: "Deploy Common Infra (${{ github.event.inputs.environment || 'PR' }})"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }} # Links to GitHub Environment for protection rules/secrets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.HANDS_ON_LAMBDA_ECR_TERRAFORM_IAM }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Common Plan
        id: plan
        env:
          ENV: ${{ github.event.inputs.environment || 'dev' }} # Default to 'dev' for PRs if not specified
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          make common-plan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Common Apply (Manual Trigger Only)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment
        env:
          ENV: ${{ github.event.inputs.environment }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          make common-apply
        working-directory: ${{ env.TF_WORKING_DIR }}
